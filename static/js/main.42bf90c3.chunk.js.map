{"version":3,"sources":["App.tsx","api.ts","components/Loader/Loader.tsx","components/Loader/peopleTable.tsx","index.tsx"],"names":["getIsActive","isActive","cn","App","className","role","to","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PeopleTable","useState","people","setPeople","personId","useParams","selectedPerson","find","person","slug","isPeopleLoaded","setIsPeopleLoaded","isPeopleLoading","setIsPeopleLoading","loadPeople","peopleData","useEffect","getParent","parentType","parentTypeName","fatherName","motherName","foundPerson","name","sex","map","born","died","createRoot","document","getElementById","render","path","element","replace","index"],"mappings":"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","file":"static/js/main.42bf90c3.chunk.js","sourcesContent":["import { NavLink, Outlet } from 'react-router-dom';\nimport cn from 'classnames';\n// import { Loader } from './components/Loader';\n\nimport './App.scss';\n\nconst getIsActive = ({\n  isActive,\n}: { isActive: boolean }) => (cn('navbar-item', {\n  'has-background-grey-lighter': isActive,\n}));\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={getIsActive}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={getIsActive}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from './Loader';\n\nexport const PeopleTable: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const { personId } = useParams();\n  const selectedPerson = people.find(person => person.slug === personId);\n  const [isPeopleLoaded, setIsPeopleLoaded] = useState(true);\n  const [isPeopleLoading, setIsPeopleLoading] = useState(false);\n\n  const loadPeople = async () => {\n    setIsPeopleLoading(true);\n\n    try {\n      const peopleData = await getPeople();\n\n      setPeople(peopleData);\n    } catch {\n      setIsPeopleLoaded(false);\n    } finally {\n      setIsPeopleLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  const isMotherExistInList = (motherName?: string | null) => {\n    return people.find(person => person.name === motherName);\n  };\n\n  const isFatherExistInList = (fatherName?: string | null) => {\n    return people.find(person => person.name === fatherName);\n  };\n\n  const getParent = (person: Person, parentType: 'father' | 'mother') => {\n    const parentTypeName = parentType === 'mother'\n      ? 'motherName'\n      : 'fatherName';\n\n    if (!person[parentTypeName]) {\n      return <td>-</td>;\n    }\n\n    const foundPerson = parentType === 'mother'\n      ? isMotherExistInList(person[parentTypeName])\n      : isFatherExistInList(person[parentTypeName]);\n\n    if (foundPerson) {\n      return (\n        <td>\n          <Link\n            className={cn({\n              'has-text-danger': foundPerson.sex === 'f',\n            })}\n            to={`/people/${foundPerson.slug}`}\n          >\n            {foundPerson.name}\n          </Link>\n        </td>\n      );\n    }\n\n    return (\n      <td>\n        {person[parentTypeName]}\n      </td>\n    );\n  };\n\n  // console.log(people);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      {/* {isPeopleLoaded && !isPeopleLoading */}\n      {isPeopleLoading && (<Loader />)}\n\n      {!isPeopleLoading && isPeopleLoaded && (\n        <table\n          data-cy=\"peopleTable\"\n          className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n        >\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Sex</th>\n              <th>Born</th>\n              <th>Died</th>\n              <th>Mother</th>\n              <th>Father</th>\n            </tr>\n          </thead>\n\n          {people.map(person => (\n            <tbody\n              key={person.slug}\n              className={cn({\n                'has-background-warning': person.slug === selectedPerson?.slug,\n              })}\n            >\n              <tr data-cy=\"person\">\n                <td>\n                  <Link\n                    to={`/people/${person.slug}`}\n                    className={cn({\n                      'has-text-danger': person.sex === 'f',\n                    })}\n                  >\n                    {person.name}\n                  </Link>\n                </td>\n\n                <td>{person.sex}</td>\n                <td>{person.born}</td>\n                <td>{person.died}</td>\n                {getParent(person, 'mother')}\n                {getParent(person, 'father')}\n              </tr>\n\n              {/* <tr data-cy=\"person\">\n              <td>\n                <a href=\"#/people/philibert-haverbeke-1907\">\n                  Philibert Haverbeke\n                </a>\n              </td>\n\n              <td>m</td>\n              <td>1907</td>\n              <td>1997</td>\n\n              <td>\n                <a\n                  className=\"has-text-danger\"\n                  href=\"#/people/emma-de-milliano-1876\"\n                >\n                  Emma de Milliano\n                </a>\n              </td>\n\n              <td>\n                <a href=\"#/people/emile-haverbeke-1877\">\n                  Emile Haverbeke\n                </a>\n              </td>\n            </tr> */}\n\n              {/* <tr data-cy=\"person\" className=\"has-background-warning\">\n            <td>\n              <a href=\"#/people/jan-frans-van-brussel-1761\">\n                Jan Frans van Brussel\n              </a>\n            </td>\n\n            <td>m</td>\n            <td>1761</td>\n            <td>1833</td>\n            <td>-</td>\n\n            <td>\n              <a href=\"#/people/jacobus-bernardus-van-brussel-1736\">\n                Jacobus Bernardus van Brussel\n              </a>\n            </td>\n          </tr>\n\n          <tr data-cy=\"person\">\n            <td>\n              <a\n                className=\"has-text-danger\"\n                href=\"#/people/lievijne-jans-1542\"\n              >\n                Lievijne Jans\n              </a>\n            </td>\n\n            <td>f</td>\n            <td>1542</td>\n            <td>1582</td>\n            <td>-</td>\n            <td>-</td>\n          </tr>\n\n          <tr data-cy=\"person\">\n            <td>\n              <a href=\"#/people/bernardus-de-causmaecker-1721\">\n                Bernardus de Causmaecker\n              </a>\n            </td>\n\n            <td>m</td>\n            <td>1721</td>\n            <td>1789</td>\n\n            <td>\n              <a\n                className=\"has-text-danger\"\n                href=\"#/people/livina-haverbeke-1692\"\n              >\n                Livina Haverbeke\n              </a>\n            </td>\n\n            <td>\n              <a href=\"#/people/lieven-de-causmaecker-1696\">\n                Lieven de Causmaecker\n              </a>\n            </td>\n          </tr> */}\n            </tbody>\n          ))}\n        </table>\n      )}\n\n      {!isPeopleLoaded && (\n        <div className=\"block\">\n          <div className=\"box table-container\">\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport {\n  Navigate, Route, HashRouter as Router, Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { PeopleTable } from './components/Loader/peopleTable';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route index element={<h1 className=\"title\">Home Page</h1>} />\n          <Route\n            path=\"people/:personId?\"\n            element={<PeopleTable />}\n          />\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n        </Route>\n      </Routes>\n    </Router>,\n  );\n"],"sourceRoot":""}